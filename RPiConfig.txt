Raspberry Pi configuration to build an access server
1. Update the operating system and software
  sudo apt-get update
  sudo apt-get upgrade
  sudo reboot
  
2. Install the Python dev package
  sudo apt-get install python-dev
  
3. Enable SPI on the system
  sudo nano /etc/modprobe.d/raspi-blacklist.conf
  Comment line with spi-bcm2708 (add # at the beginning of the line)
  Save (Ctrl+o) and quit (Ctrl+x) nano editor
  sudo nano /boot/config.txt
  Add the following line at the end of the file: dtparam=spi=on
  Save (Ctrl+o) and quit (Ctrl+x) nano editor
  
4. Reboot (again)
  sudo reboot
  
5. Validate SPI enabling 
  lsmod
  Check that spi_bcm2708 is there

6. Install the Python SpiDev module  
  mkdir python-spi
  cd python-spi
  wget https://raw.github.com/doceme/py-spidev/master/setup.py
  wget https://raw.github.com/doceme/py-spidev/master/spidev_module.c
  wget https://raw.github.com/doceme/py-spidev/master/README.mb
  wget https://raw.github.com/doceme/py-spidev/master/CHANGELOG.mb 
  sudo python setup.py install
  
7. Install the MySQL module for Python
  sudo apt-get install python-mysqldb
  
8. Check Python GPIO module (preinstalled on latest raspbian)
  In Idle for Python 2.7 type: import RPi.GPIO
  Nothing should happen

9. Install svn
  sudo apt-get install subversion

10. Pull the source code for the pi-access-server from Github.
  svn export https://github.com/david-beaudette/pi-access-server/trunk/ ~/pi-access-server

11. Install the radio library in Python path
  mv ~/pi-access-server/lib_nrf24/lib_nrf24.py /usr/lib/python2.7/dist-packages/

12. Make the piaccessserver application executable
  [to be documented]

13. Configure cron to launch the script at startup.
  [to be documented]

14. Configure the access server parameters
  [to be documented (edit the .ini file)]

15. Reboot